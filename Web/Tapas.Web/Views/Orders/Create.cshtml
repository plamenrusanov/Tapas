@model Tapas.Web.ViewModels.Orders.OrderInpitModel
@{
    ViewData["Title"] = "Create";
}

<h1 class="text-center">Create</h1>
<button onclick="getLatitude()">Get</button>
<a href="/Addreses/GetAddressFromLocation?latitude=@(Model.Latitude)&longitude=@(Model.Longitude)"> Try It </a>
<p id="demo"></p>
@Html.EditorFor(x => x.Latitude, new { id = "latitude" })
@Html.EditorFor(x => x.Longitude, new { id = "longitude" })
<hr class="hr-tapas" />





@*@using (Html.BeginForm("Create", "Orders", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true);
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(x => x.AddressId, "Адрес за доставка:")
                @Html.DropDownListFor(x => x.AddressId, Model.Addresses.Select(x => new SelectListItem() { Text = string.Format("ул. {0} {1}", x.Street, x.StreetNumber), Value = x.Id }).ToList(), new { })
            </div>
            <div class="col-md-6">

            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(m => m.AddInfo, "Допълнителна информация:")
                @Html.EditorFor(m => m.AddInfo)
                @Html.ValidationMessageFor(m => m.AddInfo)
            </div>
        </div>


    }*@



<div class="row">
    <a href="javascript:window.location=createDynamicURL();"> employee info </a>
</div>
<script>
    function createDynamicURL() {
        //The variable to be returned
        var URL;

        //The variables containing the respective IDs
        URL += "/Orders/Create?";
        URL += "latitude=";
        URL += getLatitude();
        URL += "longitude=";
        URL += getLongitude();

        return URL;
    }
    function getLatitude() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showLatitude);
        }
    }

    function showLatitude(position) {
        return position.coords.latitude;
    }
    function getLongitude() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showLongitude);
        }
    }

    function showLongitude(position) {
        return position.coords.longitude;
    }
</script>
<script>
    var c = document.getElementById("demo");

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            c.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        c.innerHTML = "lat=" + position.coords.latitude + "&" +
            "lon=" + position.coords.longitude;
    }



</script>